library(Seurat)
library(ggplot2)
library(magrittr)
library(harmony)
library(DESeq2)
library(SingleCellExperiment)
library(patchwork)
library(ggrepel)
library(wordcloud)
library(RColorBrewer)
library(eulerr)
library(wordcloud2)
library(tm)
library("clusterProfiler")
library("gplots")
library("devtools")
library("DOSE")
library("dplyr")
library("ggplot2")
library("AnnotationDbi")
library("BiocParallel")
library("RColorBrewer")
library("org.Mm.eg.db")
library(enrichplot)
library("ggupset")
library(ggsignif)
library(gplots)
library(reshape)
library(ggvenn)
library(readxl)
set.seed(123)
files<-list.files(path=".", pattern="_for_integration.rds")
flw<-vector("list", length(files))
for (filename in files){
flw[[filename]]<-gsub("_for_integration.rds", "", filename)
name<-readRDS(file=filename)
assign(flw[[filename]], name)
}
name<-merge(molar_1, y=c(molar_4, molar_7, molar_9), add.cell.ids=c("molar_1", "molar_4", "molar_7", "molar_9"), project="tooth")
name$orig.ident<-gsub("_A.*|_T.*|_G.*|_C.*", "", colnames(name))
name[["percent.mt"]]<-PercentageFeatureSet(name, pattern="^mt-")
z<-print(VlnPlot(name, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3, pt.size = 0.1, group.by="orig.ident", cols=c("Red", "Yellow", "Pink", "Orange")))
name <- subset(name, subset = nFeature_RNA > 200 & percent.mt < 5 )
name <- NormalizeData(name)
name <- FindVariableFeatures(name, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(name), 20)
all.genes <- rownames(name)
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("hgnc_symbol"), filters = "hgnc_symbol", values = x , mart = human, attributesL = c("mgi_symbol"), martL = mouse, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
m.s.genes <- convertHumanGeneList(cc.genes.updated.2019$s.genes)
m.g2m.genes <- convertHumanGeneList(cc.genes.updated.2019$g2m.genes)
name<-CellCycleScoring(name, s.features=m.s.genes, g2m.features=m.g2m.genes, set.ident=TRUE)
tooth <- ScaleData(name, features = rownames(name))
tooth <- RunPCA(tooth, features = VariableFeatures(name))
print(tooth[["pca"]], dims = 1:5, nfeatures = 5)
tooth <- JackStraw(tooth, num.replicate = 100)
tooth <- ScoreJackStraw(tooth, dims = 1:20)
b<-JackStrawPlot(tooth, dims = 1:15)
c<-ElbowPlot(tooth)
tooth <- FindNeighbors(tooth, dims = 1:15)
tooth <- FindClusters(tooth, resolution = 0.4)
tooth <- RunUMAP(tooth, dims = 1:15)
plot1<-VariableFeaturePlot(name) + theme(aspect.ratio = 1)
top10 <- head(VariableFeatures(name), 20)
p<-LabelPoints(plot = plot1, points = top10, repel = TRUE) + theme(aspect.ratio = 1)
jpeg(file="SupplementalFigure1.jpg", height=1500, width=1500)
(a|b)/(c|p)
dev.off()
saveRDS(tooth, file = "1_tooth_with_rep_data_original_cluster_numbers.rds")

tooth$Idents<-tooth$seurat_clusters
pct<-table(tooth$Idents, tooth$orig.ident)
pct<-as.data.frame(pct)

n<-z + scale_fill_manual(values=c("Red", "Yellow", "Pink", "Orange"))
p6<-DimPlot(tooth, reduction = "umap", group.by="seurat_clusters", pt.size=1) + theme(aspect.ratio = 1) + theme(legend.text=element_text(size=20), axis.text=element_text(size=12))
p7<-DimPlot(tooth, reduction = "umap", split.by = "orig.ident", ncol=2)+ theme(aspect.ratio = 1) + theme(legend.text=element_text(size=20), axis.text=element_text(size=12)) 
p8<-ggplot(pct, aes(x = Var1, y = Freq, fill = Var2)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Cluster") + ylab("Proportion per Replicate") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))+ theme(aspect.ratio = 1) + theme(legend.text=element_text(size=12)) + scale_fill_manual(values=c("Red", "Yellow", "Pink", "Orange"))
p9<-ggplot(pct, aes(x = Var2, y = Freq, fill = Var1)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Replicate") + ylab("Proportion per Cluster") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))+ theme(aspect.ratio = 1) + theme(legend.text=element_text(size=12))
pdf(file="Figure1.pdf", height=12, width=18)
q<-n/(p6|p9|p8)
q
dev.off()
jpeg(file="Figure1.jpg", height=1200, width=1500)
q
dev.off()
ggsave("Figure1.eps", q, height=12, width=18)

x<-levels(unique(tooth$seurat_clusters))
f<-c()
flw<-vector("list", length(x))
background <- bitr(rownames(tooth), fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
data2<-NULL
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}

for (val in x){
print(val)
flw[[val]]<-FindMarkers(tooth, ident.1 = val, test.use = "DESeq2", min.pct=0.25, logfc.threshold=0.5, max.cells.per.ident=400)
flw[[val]]<-subset(flw[[val]], avg_logFC > 0.50)
#flw[[val]]<-read.table(file=(gsub("/", "_", gsub(" ", "", paste("tooth_clustermarkers", val, ".txt", sep="")))))
assign(gsub(" |\\+", "", paste("clustermarkers", val, sep="")), flw[[val]])
y<-as.data.frame(get(paste("clustermarkers", val, sep="")))
n<-tail(y[order(y$avg_logFC),], 10)
f<-rbind(f, n)
value_bp <- enrichGO(gene = rownames(y),
                      universe = rownames(tooth),
                      OrgDb = org.Mm.eg.db, 
                      keyType = 'SYMBOL',
                      readable = F,
                      ont = "BP",
                      qvalueCutoff = 0.05,
                      pAdjustMethod = "bonferroni")
human_disease <- convertHumanGeneList(rownames(y))
human_disease<-bitr(human_disease, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
human_disease_bg <- convertHumanGeneList(rownames(tooth))
human_disease_bg <-bitr(human_disease_bg, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
#value_cc <- enrichDO(gene = human_disease$ENTREZID,              ont           = "DO",              pvalueCutoff  = 0.05, universe      = human_disease_bg$ENTREZID,              minGSSize     = 5,              maxGSSize     = 500,              qvalueCutoff  = 0.05,              readable      = FALSE)
value_cc<-enrichDGN(human_disease$ENTREZID)
value_bp1<-simplify(value_bp, cutoff=0.75, by="qvalue")
value_bp1<-as.data.frame(value_bp)
print(value_bp1)
assign(paste(val, "ontology", sep="_"), value_bp1)
l<-dotplot(value_bp, showCategory=10)
d<-barplot(value_cc, showCategory=10)
assign(paste(val, "dotplot", sep=""), l)
assign(paste(val, "disease_barplot", sep=""), d)
data<-as.data.frame(WhichCells(object=tooth, ident=val))
data[,2]<-value_bp1[1,2]
data[,3]<-value_cc[1,2]
colnames(data)<-c("Cell", "GO", "Disease")
data2<-rbind(data2, data)
v3<-strsplit(value_bp1[1,8], "/")
assign(paste(gsub(" |-", "", value_bp1[1,2]), "GOModule", sep=""), v3)
}
rm("ribonucleoproteincomplexbiogenesisGOModule", "RNAsplicingGOModule")
data<-as.data.frame(WhichCells(object=tooth, ident=c("4", "12")))
data[,2]<-c("chromosome segregation")
colnames(data)<-c("Cell", "GO", "Disease")
data2<-data2[ ! data2$Cell %in% data$Cell,]
data2<-rbind(data, data2)
rownames(data2)<-data2[,1]
tooth<-AddMetaData(tooth, metadata=data2)
tooth$Cell<-NULL
saveRDS(tooth, file = "1_tooth_with_rep_data_original_cluster_numbers.rds")


standardmarkers<-c('Tcf7l2', 'Dlk1', "Barx1", "Nr2f1", 'Bmp4', 'Msx2', "Barx2", 'Fgf4', 'Lef1', "Wnt6", "Fgf3", 'Dsp', 'Msx1', "Pitx2", 'Hba-a1', "Cdh5", "Fcer1g", "Sox10")
b<-VlnPlot(tooth, features = standardmarkers, log = FALSE, group.by="seurat_clusters", ncol=6)
g <- DotPlot(tooth, group.by="seurat_clusters", features=standardmarkers) + theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1)
pdf(file="SupplementalFigure2.pdf", height=15, width=45)
b|g
dev.off()
jpeg(file="SupplementalFigure2.jpg", height=1500, width=4500)
b|g
dev.off()


tooth<-RenameIdents(tooth, `0`="Mesenchyme", `1`="Mesenchyme", `2`='Mesenchyme', `3`='Mesenchyme', `4`='Epithelium', `5`='Mesenchyme', `6`='Epithelium', `7`='Mesenchyme', `8`='Epithelium', `9`='Red Blood Cells', `10`='Bone Progenitor Cells', `11`='Endothelium', `12`='Epithelium', `13`='Other Blood Cells', `14`='Epithelium', `15`='Perivascular Cells')

bonecells<-WhichCells(object=tooth, ident="Bone Progenitor Cells")
tooth <- tooth[,!colnames(tooth) %in% bonecells]


nodes<-list.files(pattern="Module")
nodes<-nodes[grep("Molar|pdf", nodes, invert=TRUE)]
for (node in nodes){
mod<-read.table(file=node, header=TRUE, sep="\t")
mod<-intersect(rownames(tooth), mod$x)
print(node)
print(length(mod))
modulename<-gsub(".txt", "", gsub("Module|markergenes", "", node))
assign(paste(modulename, "module", sep=""), mod)
}
p<-DimPlot(tooth, reduction = "umap", group.by="seurat_clusters") + theme(aspect.ratio = 1)
Epithelium<-c(Amelomodule, SI_SRmodule, OEEmodule)
Mesenchyme<-c(DPCmodule, Pre.odmodule, DPCPmodule)
Endothelium<-Endomodule
Immune<-c(Innatemodule, Lymphmodule)
Perivascular<-PVCmodule
nodes<-c('Mesenchyme', 'Epithelium', 'Endothelium', 'Immune', 'Perivascular')
for (node in nodes){
mod<-intersect(rownames(tooth), get(node))
print(node)
print(length(mod))
modulename<-gsub(".txt", "", gsub("Module|markergenes", "", node))
#tooth<-AddModuleScore(object=tooth, features=list(mod), bins=1, control=1000, name = modulename, seed = 1, search = TRUE)
write.table(mod, file=paste(node, "Module_MarkerGenes.txt", sep=''), sep='\t')
mod<-as.data.frame(mod)
mod$Cluster<-paste(modulename)
assign(paste(modulename, "module", sep=""), mod)
}
nodes1<-paste(nodes, '1', sep='')
pdf(file="All_celltypes_incisormodulescores.pdf", height=5, width=15)
DotPlot(tooth, features=nodes1, cols=c('red', 'blue')) + theme(aspect.ratio=1) + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()
pdf(file="All_celltypes_incisormodulescores.jpg", height=500, width=1500)
DotPlot(tooth, features=nodes1, cols=c('red', 'blue')) + theme(aspect.ratio=1) + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()

Module.markers<-rbind(Epitheliummodule, Mesenchymemodule, Endotheliummodule, Immunemodule, Perivascularmodule)
colnames(Module.markers)<-c('Gene', 'Cluster')
write.table(Module.markers, file="Adult_incisor_Modules.tsv", sep="\t")

tooth$idents<-Idents(tooth)
standardmarkers<-c('Msx1', "Pitx2", 'Hba-a1', "Cdh5", "Fcer1g", "Sox10")
p7<-DimPlot(tooth, reduction = "umap", group.by = "seurat_clusters", pt.size=1.5, label.size=6, label=TRUE, repel=TRUE) + theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1)
a7<-FeaturePlot(tooth, features=standardmarkers, ncol=2, coord.fixed=TRUE)
f <- DimPlot(tooth, reduction="umap", group.by="idents", pt.size=1.5, label.size=6, label=TRUE, repel=TRUE, cols = c('Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4', 'Bone Progenitor Cells'='#C77CFF')) & theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1, legend.position="none")
g <- DimPlot(tooth, group.by="GO", pt.size=1.5,, cols=c("#636B59", "#CDE2B8", "#90A5A9", "#00A36C", "#00FFFF", "#228B22", "#7CFC00", "#0000FF", "#088F8F", "#0096FF", "#B4C424", "#C4B454", "#DFFF00", "#96DED1")) + theme(legend.text=element_text(size=15), legend.position="right") + theme(aspect.ratio = 1)
h <- DotPlot(tooth, features = c("Mesenchyme1", "Epithelium1", "Endothelium1", "Immune1", "Perivascular1"), group.by="idents", cols=c("red", "blue"), dot.scale=10) + theme(aspect.ratio = 1)+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=20), axis.text.y=element_text(size=20)) + labs(y="Cluster Classification", x="Gene Module from Adult Incisor") 

pdf(file="Figure2.pdf", height=35, width=35)
#q<-(g/f)|a7|h
q<-(g|a7)/(h|f)
q
dev.off()
ggsave("Figure2.eps", q, height=35, width=35)
jpeg(file="Figure2.jpg", height=3500, width=3500)
q
dev.off()


tooth[["RNA"]]@counts<-as.matrix(tooth[["RNA"]]@counts)+1
saveRDS(tooth, file = "2_tooth_with_rep_data_renamed.rds")





enamel<-subset(tooth, idents=c("Epithelium"))
enamel$Endothelium1<-NULL
enamel$Epithelium1<-NULL
enamel$Perivascular1<-NULL
enamel$Immune1<-NULL
enamel$Mesenchyme1<-NULL
enamel$Endothelium<-NULL
enamel$Epithelium<-NULL
enamel$Perivascular<-NULL
enamel$Immune<-NULL
enamel$Mesenchyme<-NULL
enamel <- FindNeighbors(enamel, dims = 1:15)
enamel <- FindClusters(enamel, resolution = 0.2)
enamel <- RunUMAP(enamel, dims = 1:15)
Idents(enamel)<-enamel$seurat_clusters
saveRDS(enamel, file = "3_epithelium_only_numbered_clusters.rds")

enamel.markers <- FindAllMarkers(enamel, only.pos = TRUE, test.use = "DESeq2", min.pct = 0.25, logfc.threshold=0.5, slot = "counts", max.cells.per.ident=400)
enamel.markers<-subset(enamel.markers, avg_logFC > 0.5)
write.table(enamel.markers, file="Supplemental_Table_AllEpitheliumMarkers.tsv", sep="\t")

bite<-read.table(file="biteit_enamelknot_genes.txt")
bite<-bite$V1

ekjax<-read.table(file="JAX_enamelknot_genes.txt")
ekjax<-ekjax$V1
pekjax<-read.table(file="JAX_primaryenamelknot_genes.txt")
pekjax<-pekjax$V1
allgenes<-rownames(tooth)
jax<-union(pekjax, bite)

enamel<-AddModuleScore(object=enamel, features=list(jax), pool = NULL, ctrl = 1000, name = "KnownEK", seed = 1, search = TRUE)
tooth<-AddModuleScore(object=tooth, features=list(jax), pool = NULL, ctrl = 1000, name = "KnownEK", seed = 1, search = TRUE)

enamel$idents<-Idents(enamel)
standardmarkers<-c("Shh", 'Cdkn1a', "Lef1", 'Wnt6', 'Fgf3')
standardmarkers1<-c("Shh", 'Cdkn1a', "Lef1")


dentalepimarkers<-c('Bmp4', 'Bmp2', 'Fgf4', 'Fgf6', 'Shh', 'Wnt4', 'Wnt6', 'Wnt10a', 'Wnt10b', 'Eda', 'Edar', 'Pitx2')
enamel<-AddModuleScore(object=enamel, features=list(dentalepimarkers), pool = NULL, ctrl = 1000, name = "StandardDentalEpi", seed = 1, search = TRUE)

p<-DimPlot(tooth, reduction = "umap", group.by="idents") + theme(aspect.ratio = 1)
list<-list.files(pattern="Module")
nodes<-list[grep("Amelo|Epi|IEE|OEE|SI", list)]
for (node in nodes){
mod<-read.table(file=node, header=TRUE)
mod<-intersect(rownames(tooth), mod$x)
print(node)
print(length(mod))
modulename<-gsub(".txt", "", gsub("Module", "", node))
enamel<-AddModuleScore(object=enamel, features=list(mod), bins=1, control=1000, name = modulename, seed = 1, search = TRUE)
p<-DimPlot(enamel, reduction = "umap", group.by="idents", pt.size=0.5) + theme(aspect.ratio = 1)
f<-FeaturePlot(enamel, features =paste(modulename, "1", sep=""), cols=c('white', 'blue')) + theme(aspect.ratio = 1) + labs(title = "") 
g<-VlnPlot(enamel, features =paste(modulename, "1", sep=""), log = TRUE, group.by="idents") + geom_boxplot(width=0.1,fill="white") + theme(aspect.ratio = 1) + labs(title = modulename) + geom_signif(comparisons = list(c("1", "7"), c("2", "7"), c("3", "7"), c("4", "7"), c("5", "7"), c("6", "7")), map_signif_level = TRUE, textsize = 4, annotation="*")
#print((p | f | g)+ plot_annotation(modulename))
assign(paste(modulename, "module", sep=""), mod)
}
nodes1<-gsub('Module', '', gsub('.txt', '1', nodes))
pdf(file="Supplement_epithelium_incisor_modulescores.pdf", height=8.5, width=12)
DotPlot(enamel, features=nodes1, cols=c('red', 'blue')) + theme(aspect.ratio=1) + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()
jpeg(file="Supplement_epithelium_incisor_modulescores.jpg", height=850, width=1200)
DotPlot(enamel, features=nodes1, cols=c('red', 'blue')) + theme(aspect.ratio=1) + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()


pdf(file="Ectoderm_modulescores_markergenes.pdf", height=7.5, width=7.5)
DimPlot(enamel, reduction = "umap", group.by="seurat_clusters") + theme(aspect.ratio = 1)
DimPlot(enamel, reduction='umap', group.by='Phase') + theme(aspect.ratio=1) + ggtitle('Cell Phase')
VlnPlot(enamel, group.by="seurat_clusters", features="KnownEK1")
VlnPlot(enamel, group.by="seurat_clusters", features="StandardDentalEpi1")
DotPlot(enamel, group.by='seurat_clusters', features=standardmarkers, cols=c('red', 'blue'))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
DotPlot(enamel, group.by='seurat_clusters', features=dentalepimarkers, cols=c('red', 'blue'))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
dev.off()


enamel<-RenameIdents(enamel, `0`="Epithelium", `1`="Epithelium", `2`="Epithelium", `3`="Epithelium", `4`="Epithelium", `5`= "Epithelium", `6`="Epithelium", `7`="Enamel Knot")

pct<-table(enamel$Phase, enamel$idents)
pct<-as.data.frame(pct)
pct<-subset(pct, Freq > 0)
pdf(file="SupplementalFigure3.pdf")
c<-ggplot(pct, aes(x = Var2, y = Freq, fill = Var1)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Cluster") + ylab("Phase") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + theme(aspect.ratio = 1)
d<-ggplot(pct, aes(x = Var1, y = Freq, fill = Var2)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Phase") + ylab("Cluster") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + theme(aspect.ratio = 1)
d | c
dev.off()

temp<-subset(enamel, idents = "Enamel Knot")
ekexpression<-as.data.frame(AverageExpression(temp, features = rownames(temp), return.seurat = FALSE, verbose = TRUE))
ekexpression$Gene<-rownames(ekexpression)
colnames(ekexpression)<-c("expression", "Gene")
ekexpression<-subset(ekexpression, expression > 0)
ekexpression<-ekexpression[order(ekexpression$expression),]
ekexpression<-rownames(subset(ekexpression, expression > 0))
write.table(ekexpression, file="ek_all_genes.txt")

my_cols <- c('6'='#c7be02','2'='#a8a32d','3'='#ABA300','0'='#524f08','4'='#adab7d', '7'='#f2ec5c','5'='#c7c595', '1'='#91906d')
my_cols2 <- my_cols[order(as.integer(names(my_cols)))]
scales::show_col(my_cols2)

p6<-FeaturePlot(tooth, features = "KnownEK1", cols=c('white', 'red'), pt.size=1.5) + labs(title = "Known EK Gene Module Score") + theme(aspect.ratio = 1, plot.title=element_text(size=20))

p7<-DimPlot(enamel, reduction = "umap", group.by = "seurat_clusters", pt.size=1.5, label.size=14, cols=my_cols2) + theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1)

a1 <- FeaturePlot(enamel, features = "Shh", combine = TRUE, pt.size=2) + theme(aspect.ratio = 1, plot.title=element_text(size=20))
a2 <- FeaturePlot(enamel, features = "Wnt10b", combine = TRUE, pt.size=2) + theme(aspect.ratio = 1)
a3 <- FeaturePlot(enamel, features = "Lef1", combine = TRUE) + theme(aspect.ratio = 1)
a4 <- FeaturePlot(enamel, features = "Wnt6", combine = TRUE) + theme(aspect.ratio = 1)

c<-ggplot(pct, aes(x = Var2, y = Freq, fill = Var1)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Cluster") + ylab("Phase") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + theme(aspect.ratio = 1, axis.text=element_text(size=20))
enamel$idents<-Idents(enamel)
f <- DimPlot(enamel, reduction="umap", group.by="idents", pt.size=1.5, label.size=8, label=TRUE, cols = c('Enamel Knot' = 'red', 'Epithelium' ='#ABA300')) & theme(legend.text=element_text(size=20), legend.position="none") + theme(aspect.ratio = 1)

#g <- DotPlot(enamel, features = standardmarkers, group.by="seurat_clusters") + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) 

h<-FeaturePlot(enamel, features = "KnownEK1", cols=c('white', 'red'), pt.size=1.5) + labs(title = "Known EK Gene Module Score") + theme(aspect.ratio = 1, plot.title=element_text(size=20))

i<-VlnPlot(enamel, features = "KnownEK1", slot = "counts", log = FALSE, group.by="seurat_clusters", pt.size = 0.05, cols=my_cols2) + geom_boxplot(width=0.1,fill="white") + labs(title = "Known EK Gene Module Score", x="Cluster") + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20)) + geom_signif(comparisons = list(c("7", "2"), c('7', '1'), c('7', '3'), c('7', '4'), c('7', '5'), c('7', '6'), c('7', '0')), map_signif_level = TRUE, test = "wilcox.test", textsize = 10) + ylim(-0.1,0.6)

j<-VlnPlot(tooth, features = "KnownEK1", log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4', 'Bone Progenitor Cells'='#C77CFF')) + geom_boxplot(width=0.1,fill="white") + labs(title = "Known EK Gene Module Score", x="Cluster") + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20))+ geom_signif(comparisons = list(c("Mesenchyme", "Epithelium"), c("Epithelium", "Endothelium"), c("Epithelium", "Other Blood Cells"), c("Epithelium", "Red Blood Cells"), c("Epithelium", "Perivascular Cells")), map_signif_level = TRUE, test = "wilcox.test", textsize = 10) + ylim(-0.1,0.6) 


pdf(file="Figure3.pdf", height=25, width=20)
x<-(p6|j)/(p7|a1|a2)/(h|i|f)
x
dev.off()
ggsave("Figure3.eps", x, height=25, width=20)
jpeg(file="Figure3.jpg", height=2500, width=2000)
(p6|j)/(p7|a1|a2)/(h|i|f)
dev.off()


saveRDS(enamel, file = "4_epithelium_only_renamed_clusters.rds")




enamelknotcells<-WhichCells(object=enamel, ident="Enamel Knot")
Idents(tooth, cells = enamelknotcells)<-"Enamel Knot"
tooth$idents<-Idents(tooth)

levels<-data.frame(Idents(tooth))
x<-unique(levels$Idents)
flw<-vector("list", length(x))
for (val in x){
flw[[val]]<-FindMarkers(tooth, ident.1 = val, test.use = "DESeq2", min.pct=0.25, logfc.threshold=0.5, max.cells.per.ident=400)
flw[[val]]<-subset(flw[[val]], avg_logFC > 0.5)
flw[[val]]<-subset(flw[[val]], p_val_adj <=0.05)
temp<-subset(tooth, idents = val)
expression<-AverageExpression(temp, features = rownames(temp), return.seurat = FALSE, verbose = TRUE)
assign(gsub(" |\\+", "", paste("clustermarkers", val, sep="")), flw[[val]])
write.table(data.frame(flw[[val]]), file=(gsub("/", "_", gsub(" ", "", paste("tooth_clustermarkers_renamed_clusters_all", val, ".txt", sep="")))), sep="\t")
write.table(data.frame(expression), file=(gsub("/", "_", gsub(" ", "", paste("averageexpression", val, ".txt", sep="")))), sep="\t")
}

tooth.markers <- FindAllMarkers(tooth, only.pos = TRUE, test.use = "DESeq2", min.pct = 0.25, logfc.threshold=0.5, max.cells.per.ident=400)
tooth.markers<-subset(tooth.markers, avg_logFC > 0.5)
tooth.markers<-subset(tooth.markers, p_val_adj<= 0.05)

write.table(tooth.markers, file="Supplemental_Table_5_AllMarkers_Renamed_Clusters_withEK.tsv", sep="\t")
tooth.marker.genes<-rownames(tooth.markers)


EKmarkers<-read.table("tooth_clustermarkers_renamed_clusters_allEnamelKnot.txt")

ekmarkers<-rownames(EKmarkers[order(EKmarkers$avg_logFC),])

bite<-read.table(file="biteit_enamelknot_genes.txt")
bite<-bite$V1

topekmarkers<-rownames(EKmarkers[EKmarkers$avg_logFC > 1,])

ekexpression<-read.table(file="ek_all_genes.txt")
ekexpression<-ekexpression$x
ekjax<-read.table(file="JAX_enamelknot_genes.txt")
ekjax<-ekjax$V1
pekjax<-read.table(file="JAX_primaryenamelknot_genes.txt")
pekjax<-pekjax$V1
allgenes<-rownames(tooth)
jax<-union(pekjax, bite)

write.table(jax, "SupplementalTable5.txt")
venn<-list(bite, ekmarkers, topekmarkers, ekexpression, ekjax, pekjax, jax, allgenes)
names(venn)[1]<-c("Bite-It Known EK Genes")
names(venn)[2]<-c("EK Markers")
names(venn)[3]<-c("Top EK Markers")
names(venn)[4]<-c("All Identified EK Genes")
names(venn)[5]<-c("JAX All EK Genes")
names(venn)[6]<-c("All Known EK Genes")
names(venn)[7]<-c("All Identified Bud Stage Genes")
names(venn)[8]<-c("All Known EK Genes")
d5<-ggvenn(venn, columns =c("All Known EK Genes", "Top EK Markers"))


write.table(topekmarkers, file="SupplementalTable8.txt")
novelekmarkers<-setdiff(ekmarkers, jax)

tooth<-AddModuleScore(object=tooth, features=list(topekmarkers), pool = NULL, ctrl = 1000, name = "TopEK", seed = 1, search = TRUE)
tooth<-AddModuleScore(object=tooth, features=list(ekmarkers), pool = NULL, ctrl = 1000, name = "AllEK", seed = 1, search = TRUE)
tooth<-AddModuleScore(object=tooth, features=list(novelekmarkers), pool = NULL, ctrl = 1000, name = "NovelEK", seed = 1, search = TRUE)
tooth<-AddModuleScore(object=tooth, features=list(jax), pool = NULL, ctrl = 1000, name = "KnownEK", seed = 1, search = TRUE)

for (featurename in jax){
l<-FeaturePlot(tooth, features = featurename) + theme(aspect.ratio = 1)
g2<-VlnPlot(tooth, features = featurename, log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4', 'Bone Progenitor Cells'='#C77CFF')) + geom_boxplot(width=0.1,fill="white") + labs(title = featurename, x="Cluster") + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium")), map_signif_level = TRUE, test = "wilcox.test", textsize = 8) + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20))+ ylim(-0.1,1.5)
#print(l|g2)
}
pdf(file="Supplemental_AllCombined_UMAPAllKnownEKGenes.pdf", height=20, width=20)
DotPlot(tooth, features=jax, cols=c('green', 'purple')) + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=15))
dev.off()
saveRDS(tooth, file = "FINAL_tooth_with_rep_data_renamed_clusters_EK_module_score.rds")



ekmarkers<-read.table(file="tooth_clustermarkers_renamed_clusters_allEnamelKnot.txt")

EnamelKnotTop<-subset(ekmarkers, ekmarkers$avg_logFC >= 1.0)
EnamelKnotTop<-EnamelKnotTop[order(EnamelKnotTop$avg_logFC),]
topekmarkers<-rownames(EnamelKnotTop)
topEK<-tail(topekmarkers, 6)
background<-bitr(rownames(tooth), fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
novelekmarkers<-setdiff(rownames(ekmarkers), jax)
value <- bitr(rownames(ekmarkers), fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
value_bp <- enrichGO(gene = value$ENTREZID,
                      universe = background$ENTREZID,
                      OrgDb = org.Mm.eg.db, 
                      keyType = 'ENTREZID',
                      readable = T,
                      ont = "BP",
                      qvalueCutoff = 0.05,
                      pAdjustMethod = "bonferroni")
write.table(ekmarkers, file="SupplementalTable6.txt")
write.table(as.data.frame(value_bp), file="SupplementalTable7.txt")
value1 <- bitr(topekmarkers, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
value_bp1 <- enrichGO(gene = value1$ENTREZID,
                      universe = background$ENTREZID,
                      OrgDb = org.Mm.eg.db, 
                      keyType = 'ENTREZID',
                      readable = T,
                      ont = "BP",
                      qvalueCutoff = 0.05,
                      pAdjustMethod = "bonferroni")
value2 <- bitr(novelekmarkers, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
value_bp2 <- enrichGO(gene = value2$ENTREZID,
                      universe = background$ENTREZID,
                      OrgDb = org.Mm.eg.db, 
                      keyType = 'ENTREZID',
                      readable = T,
                      ont = "BP",
                      qvalueCutoff = 0.05,
                      pAdjustMethod = "bonferroni")
plott<-as.ggplot(upsetplot(value_bp)) + theme(aspect.ratio = 1)
plot1<-upsetplot(value_bp1) + theme(aspect.ratio = 1)
plot2<-upsetplot(value_bp2) + theme(aspect.ratio = 1)

library(ggplotify)
completely_contained <- euler(c("A" = length(setdiff(jax, rownames(ekmarkers))), "B" = length(setdiff(rownames(ekmarkers), jax)), "A&B" = (length(jax) - length(setdiff(jax, rownames(ekmarkers))))))
p3<-as.ggplot(plot(completely_contained, labels = c("Known EK Genes", "All EK Marker Genes"), fills = list(fill=c("red", "purple"), alpha=0.3), quantities=TRUE, legend=FALSE))
p3<-p3+theme(aspect.ratio=1)


p<-DimPlot(tooth, reduction = "umap", group.by="idents", pt.size=1.5, label=TRUE, label.size=10, repel=TRUE, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4')) + theme(aspect.ratio = 1, legend.position="none", text=element_text(size=20))

f<-FeaturePlot(tooth, features = "KnownEK1", cols=c('white', 'red'), pt.size=1.5) + labs(title = "Known EK Gene Module Score")  + theme(aspect.ratio = 1, text = element_text(size = 20))

g<-VlnPlot(tooth, features = "KnownEK1", log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4')) + geom_boxplot(width=0.1,fill="white") + labs(title = "Known EK Gene Module Score", x="Cluster") + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium")), map_signif_level = TRUE, test = "wilcox.test", textsize = 8) + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20)) + ylim(-0.1,1.7)

h<-FeaturePlot(tooth, features = "Bmp4", cols=c('white', "blue"), pt.size=1.5) + theme(aspect.ratio = 1, text = element_text(size = 20)) 

f2<-FeaturePlot(tooth, features = "AllEK1", cols=c('white', "purple"), pt.size=1.5) + labs(title = "EK Gene Signature Module Score") + theme(aspect.ratio = 1, text = element_text(size = 20)) 

g2<-VlnPlot(tooth, features = "AllEK1", log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4')) + geom_boxplot(width=0.1,fill="white") + labs(title = "EK Marker Gene Module Score", x="Cluster") + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium")), map_signif_level = TRUE, test = "wilcox.test", textsize = 8) + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20))+ ylim(-0.1,1.7)

data <- FetchData(tooth, vars = c('KnownEK1','AllEK1', 'idents'), slot = "counts") 
#data<-data[data$idents == "Enamel Knot",]
long_data <- melt(data)
g3<-ggplot(long_data, aes(x = idents, y = value, fill=variable)) + geom_violin() + labs(title = "Module Scores of Known vs Marker EK Genes", x="Gene Module", y="Module Score") + scale_fill_manual(values=c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4')) + theme(aspect.ratio = 1, text = element_text(size = 20)) + geom_signif(comparisons = list(c("AllEK1", "KnownEK1")), test = "wilcox.test", map_signif_level = TRUE, textsize = 6) 

data <- FetchData(tooth, vars = c('KnownEK1','AllEK1', 'idents'), slot = "counts") 
data<-data[data$idents == "Enamel Knot",]
long_data <- melt(data)
g4<-ggplot(long_data, aes(x = variable, y = value, fill=variable)) + geom_violin() + labs(title = "Module Scores in the Enamel Knot", x="Gene Module", y="Module Score") + stat_summary(fun.data=mean_sdl, geom="pointrange", color="black") + scale_fill_manual(values=c("red", "purple")) + theme(aspect.ratio = 1, legend.position = "none", text=element_text(size=20), axis.text=element_text(size=20)) + geom_signif(comparisons = list(c("AllEK1", "KnownEK1")), test = "wilcox.test", map_signif_level = TRUE, textsize = 8)


#plot4<-DotPlot(tooth, features = head(topekmarkers, 10)) + labs(title = "Top EK Marker Gene Expression") + theme(aspect.ratio = 1) 

pdf(file="Figure4.pdf", height=15, width=35)
#p|((f|g)/(f2|g2)/(p3|g4))
x<-p|(f/g)|(f2/g2)|(p3/g4)
x
dev.off()
ggsave("Figure4.eps", x, height=15, width=35)
jpeg(file="Figure4.jpg", height=1500, width=3500)
p|(f/g)|(f2/g2)|(p3/g4)
dev.off()

write.table(jax, "SupplementalTable5.txt")
allgenes<-rownames(tooth)
ekmarkers<-rownames(ekmarkers)
library(permute)
d<-NULL
for (i in 1:10000){
markers<-sample(allgenes,317)
d<-rbind(d, length(intersect(markers, jax)))
}
t<-table(d)
d2<-NULL
for (i in 1:10000){
markers<-sample(allgenes,60)
d2<-rbind(d2, length(intersect(markers, jax)))
}
t2<-table(d2)
avg<-read.table(file="averageexpressionEnamelKnot.txt")
avg<-subset(avg, Enamel.Knot > 0)
d3<-NULL
for (i in 1:10000){
markers<-sample(allgenes,length(rownames(avg)))
d3<-rbind(d3, length(intersect(markers, jax)))
}
t3<-table(d3)
length(intersect(ekmarkers, jax))
###p value is <0.0001, since the number is 38 and that NEVER appears in random sampling of 10,000 times
pdf(file="SupplementalFigure4.pdf", height=8, width=24)
p<-hist(d, xlim=c(0,40), main="Number of EK Genes From Random Sampling of 317 Genes Expressed in E14 Molar", xlab="Number of Overlapping Genes with EK", ylab="Frequency") + abline(v=length(intersect(ekmarkers, jax)))
p1<-hist(d2, xlim=c(0,10), main="Number of EK Genes From Random Sampling of 60 Genes Expressed in E14 Molar", xlab="Number of Overlapping Genes with EK", ylab="Frequency") + abline(v=length(intersect(topekmarkers, jax)))
p2<-hist(d3, xlim=c(0,100), main="Number of EK Genes From Random Sampling of 21160 Genes Expressed in E14 Molar", xlab="Number of Overlapping Genes with EK", ylab="Frequency") + abline(v=length(intersect(rownames(avg), jax))) 
p 
p1
p2

dev.off()
jpeg(file="SupplementalFigure4.jpg")
p|p1|p2
dev.off()


prolifmarkers<-c("Cdkn1a", "Mki67", "Trp53")
pdf(file="ProliferationMarkers.pdf")
FeaturePlot(tooth, features=prolifmarkers, ncol=3) + theme(aspect.ratio=1)
VlnPlot(tooth, features=prolifmarkers, ncol=3) + theme(aspect.ratio=1)
dev.off()

markers<-c("Shh", "Cdkn1a", "Wnt10a", "Bmp4", "Fgf3", "Gadd45g", "Lrp4", "Ltb", "Irx1", "Sp5", "Cd24a", "Spint2")
pdf(file="SupplementalFigure5.pdf", height=11, width=8.5)
for (marker in markers){
f<-VlnPlot(tooth, features = marker, group.by='idents') + theme(aspect.ratio = 1)
f1<-FeaturePlot(tooth, features = marker) + theme(aspect.ratio = 1)
print(f/f1)
}
dev.off()


standardmarkers<-c('Wnt10a', "Wnt10b", 'Msx1', "Bmp4", 'Lef1', "Wnt6", "Fgf3")
p7<-DimPlot(tooth, reduction = "umap", group.by = "idents", pt.size=1.5, label.size=14) + theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1)
a<- FeaturePlot(tooth, features = standardmarkers, ncol=3, combine = TRUE, coord.fixed=TRUE)
b<-VlnPlot(tooth, features = standardmarkers, slot = "counts", log = TRUE, group.by="idents", ncol=3) + theme(aspect.ratio = 1)
f <- DimPlot(tooth, reduction="umap", group.by="idents", pt.size=1.5, label.size=14) & theme(legend.text=element_text(size=15)) + theme(aspect.ratio = 1)
g <- DotPlot(tooth, features = standardmarkers, group.by="idents") + theme(aspect.ratio = 1)
pdf(file="SupplementalFigure3.pdf", height=15, width=15)
(p7 | g) / a 
dev.off()
jpeg(file="SupplementalFigure3.jpg", height=1500, width=1500)
(p7 | g) / a 
dev.off()






tooth$idents<-Idents(tooth)
pct<-table(tooth$old.ident, tooth$idents)
pct<-as.data.frame(pct)
pdf(file="SupplementalFigureY.pdf", height=7.5, width=15)
f<-ggplot(pct, aes(x = Var2, y = Freq, fill = Var1)) + scale_fill_manual(values=c("Red", "Yellow", "Pink", "Orange")) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Cell Type") + ylab("Replicate Proportion") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
g<-ggplot(pct, aes(x = Var1, y = Freq, fill = Var2)) + theme_bw(base_size = 15) + geom_col(position = "fill", width = 0.5) + xlab("Sample") + ylab("Cell Type Proportion") + theme(legend.title = element_blank()) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
f | g 
dev.off()
jpeg(file="SupplementalFigureY.jpg", height=750, width=1500)
f|g
dev.off()
pct<-table(tooth$old.ident, tooth$idents)
pct<-cbind(pct, Total=rowSums(pct))
pct<-as.data.frame(pct)
colnames(pct)<-gsub(" ", "", colnames(pct))
pct$EK_pct<-(pct$EnamelKnot/pct$Total)
pct$EK_epi_pct<-(pct$EnamelKnot/(pct$EnamelKnot+pct$Epithelium))
mean(pct$EK_pct)
sd(pct$EK_pct)
mean(pct$EK_epi_pct)
sd(pct$EK_epi_pct)





tooth$AnnotatedCluster<-Idents(tooth)

system("scp -r ~/cotney/analysis/deconvolution/tooth/WGCNA/Module_Molar*.txt .")
nodes<-list.files(pattern="Module_Molar")
p<-DimPlot(tooth, reduction = "umap", group.by="AnnotatedCluster") + theme(aspect.ratio = 1)
pdf(file="WGCNA_Modules.pdf", height=8.5, width=16)
for (node in nodes){
mod<-read.table(file=node, header=TRUE)
mod<-intersect(rownames(tooth), mod$x)
print(node)
print(length(mod))
modulename<-gsub(".txt", "", gsub("Module_Molar_WGCNA", "", node))
tooth<-AddModuleScore(object=tooth, features=list(mod), bins=1, control=1000, name = modulename, seed = 1, search = TRUE)
p<-DimPlot(tooth, reduction = "umap", group.by="AnnotatedCluster", pt.size=0.5) + theme(aspect.ratio = 1)
f<-FeaturePlot(tooth, features =paste(modulename, "1", sep=""), cols=c('white', 'blue')) + theme(aspect.ratio = 1) + labs(title = "") 
g2<-VlnPlot(tooth, features = paste(modulename, "1", sep=""), log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4')) + geom_boxplot(width=0.1,fill="white") + labs(title = "EK Marker Gene Module Score", x="Cluster") + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium"), c('Enamel Knot', 'Bone Progenitor Cells')), map_signif_level = TRUE, test = "wilcox.test") + theme(aspect.ratio = 1, legend.position = "none", text = element_text(size = 20), axis.text=element_text(size=20))
print((g2)+ ggtitle(modulename))
assign(paste(modulename, "module", sep=""), mod)
}
nodes2<-paste(gsub('Module_Molar_WGCNA|.txt', '', nodes), "1", sep='')
DotPlot(tooth, features = nodes2, cols=c('green', 'purple')) + labs(title = "Molar WGCNA Module Scores") + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()

pdf(file="WGCNA_Modules_Dotplot.pdf", height=8.5, width=16)
DotPlot(tooth, features = nodes2, cols=c('green', 'purple')) + labs(title = "Molar WGCNA Module Scores") + theme(aspect.ratio = 1) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.text=element_text(size=12))
dev.off()


library(ggplotify)
EKmarkers<-read.table("tooth_clustermarkers_renamed_clusters_allEnamelKnot.txt")
ekmarkers<-rownames(EKmarkers[order(EKmarkers$avg_logFC),])
topekmarkers<-rownames(EKmarkers[EKmarkers$avg_logFC > 1,])
library(permute)
background <- bitr(rownames(tooth), fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Mm.eg.db")
data2<-NULL
convertHumanGeneList <- function(x){
require("biomaRt")
human = useMart("ensembl", dataset = "hsapiens_gene_ensembl")
mouse = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
genesV2 = getLDS(attributes = c("mgi_symbol"), filters = "mgi_symbol", values = x , mart = mouse, attributesL = c("hgnc_symbol"), martL = human, uniqueRows=T)
humanx <- unique(genesV2[, 2])
# Print the first 6 genes found to the screen
print(head(humanx))
return(humanx)
}
human_disease_bg <- convertHumanGeneList(rownames(tooth))
human_disease_bg <-bitr(human_disease_bg, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")



defaultW <- getOption("warn")
options(warn = -1)

nodes2<-paste(gsub('Module_Molar_WGCNA|.txt', '', nodes), 'module', sep='')
for (NODENAME2 in nodes2){
NODENAME<-get(NODENAME2)
completely_contained1 <- euler(c("A" = length(setdiff(NODENAME, ekmarkers)), "B" = length(setdiff(ekmarkers, NODENAME)), "A&B" = (length(NODENAME) - length(setdiff(NODENAME, ekmarkers)))))
completely_contained2 <- euler(c("A" = length(setdiff(NODENAME, topekmarkers)), "B" = length(setdiff(topekmarkers, NODENAME)), "A&B" = (length(NODENAME) - length(setdiff(NODENAME, topekmarkers)))))
p3<-as.ggplot(plot(completely_contained1, labels = c(paste(NODENAME2, "Genes", sep=' '), "All EK Marker Genes"), fills = list(fill=c("red", "purple"), alpha=0.3), quantities=TRUE, legend=FALSE))
p3<-p3+theme(aspect.ratio=1)
p4<-as.ggplot(plot(completely_contained2, labels = c(paste(NODENAME2, "Genes", sep=' '), "Top EK Marker Genes"), fills = list(fill=c("red", "purple"), alpha=0.3), quantities=TRUE, legend=FALSE))
p4<-p4+theme(aspect.ratio=1)
len<-length(NODENAME)
d<-NULL
abline<-length(intersect(ekmarkers, NODENAME))+5
for (i in 1:10000){
markers<-sample(allgenes,len)
d<-rbind(d, length(intersect(markers, ekmarkers)))
}
t<-table(d)
d2<-NULL
for (i in 1:10000){
markers<-sample(allgenes,len)
d2<-rbind(d2, length(intersect(markers, topekmarkers)))
}
t2<-table(d2)
topabline<-length(intersect(topekmarkers, NODENAME))+5

value_bp <- enrichGO(gene = NODENAME, universe = rownames(tooth), OrgDb = org.Mm.eg.db,  keyType = 'SYMBOL', readable = F, ont = "BP", qvalueCutoff = 0.05, pAdjustMethod = "bonferroni")
plott<-as.ggplot(dotplot(value_bp, showCategory=10)) + theme(aspect.ratio = 1)
human_disease <- convertHumanGeneList(NODENAME)
human_disease<-bitr(human_disease, fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
value_cc<-enrichDGN(human_disease$ENTREZID)
plott2<-as.ggplot(barplot(value_cc, showCategory=10)) + theme(aspect.ratio = 1)

modulename<-gsub("module", "1", NODENAME2)
g2<-VlnPlot(tooth, features = modulename, log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4', 'Bone Progenitor Cells'='#C77CFF')) + geom_boxplot(width=0.1,fill="white") + labs(title = "EK Marker Gene Module Score", x="Cluster") + ylim(min(tooth[[modulename]])-0.01, max(tooth[[modulename]])+0.01)

pdf(file=paste(NODENAME2, 'EKGenesVenn_Stats.pdf', sep=""), height=15, width=10)
print(g2 + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium"), c('Enamel Knot', 'Bone Progenitor Cells')), map_signif_level = TRUE, textsize=6, aes(y_position=c(max(tooth[[modulename]])+0.005))) + theme(aspect.ratio = 1, legend.position = "none") + ggtitle(NODENAME2))
print(plott)
print(plott2)
print(p3)
plot(t, xlim=c(1,abline)) 
abline(v=length(intersect(ekmarkers, NODENAME)))
labs(main=paste("Number of EK Marker Genes From Random Sampling of", len, "Random Genes", sep=" "), xlab="Number of Overlapping Genes with EK", ylab="Frequency")
print(p4)
plot(t2, xlim=c(1,topabline)) 
abline(v=length(intersect(topekmarkers, NODENAME)))
labs(main=paste("Number of Top EK Marker Genes From Random Sampling of", len, "Random Genes", sep=" "), xlab="Number of Overlapping Genes with EK", ylab="Frequency")
dev.off()
}















Mesmarkers<-read.table("tooth_clustermarkers_renamed_clusters_allMesenchyme.txt")
mesmarkers<-rownames(Mesmarkers[order(Mesmarkers$avg_logFC),])
topmesmarkers<-rownames(Mesmarkers[Mesmarkers$avg_logFC > 1,])


nodes2<-c('grey60module')
for (NODENAME2 in nodes2){
NODENAME<-get(NODENAME2)
completely_contained1 <- euler(c("A" = length(setdiff(NODENAME, mesmarkers)), "B" = length(setdiff(mesmarkers, NODENAME)), "A&B" = (length(NODENAME) - length(setdiff(NODENAME, mesmarkers)))))
completely_contained2 <- euler(c("A" = length(setdiff(NODENAME, topmesmarkers)), "B" = length(setdiff(topmesmarkers, NODENAME)), "A&B" = (length(NODENAME) - length(setdiff(NODENAME, topmesmarkers)))))
p3<-as.ggplot(plot(completely_contained1, labels = c(paste(NODENAME2, "Genes", sep=' '), "All EK Marker Genes"), fills = list(fill=c("red", "purple"), alpha=0.3), quantities=TRUE, legend=FALSE))
p3<-p3+theme(aspect.ratio=1)
p4<-as.ggplot(plot(completely_contained2, labels = c(paste(NODENAME2, "Genes", sep=' '), "Top EK Marker Genes"), fills = list(fill=c("red", "purple"), alpha=0.3), quantities=TRUE, legend=FALSE))
p4<-p4+theme(aspect.ratio=1)
len<-length(NODENAME)
d<-NULL
abline<-length(intersect(mesmarkers, NODENAME))+5
for (i in 1:10000){
markers<-sample(allgenes,len)
d<-rbind(d, length(intersect(markers, mesmarkers)))
}
t<-table(d)
d2<-NULL
for (i in 1:10000){
markers<-sample(allgenes,len)
d2<-rbind(d2, length(intersect(markers, topmesmarkers)))
}
t2<-table(d2)
topabline<-length(intersect(topmesmarkers, NODENAME))+5

value_bp <- enrichGO(gene = NODENAME, universe = rownames(tooth), OrgDb = org.Mm.eg.db,  keyType = 'SYMBOL', readable = F, ont = "BP", qvalueCutoff = 0.05, pAdjustMethod = "bonferroni")
plott<-as.ggplot(dotplot(value_bp, showCategory=10)) + theme(aspect.ratio = 1)

modulename<-gsub("module", "1", NODENAME2)
g2<-VlnPlot(tooth, features = modulename, log = FALSE, group.by="idents", pt.size = 0.05, cols = c('Enamel Knot' = 'red', 'Epithelium' = '#ABA300', 'Mesenchyme'='#F8766D', 'Red Blood Cells'='#0CB702', 'Other Blood Cells'='#00A9FF', 'Perivascular Cells'='#FF61CC', 'Endothelium'='#00BFC4', 'Bone Progenitor Cells'='#C77CFF')) + geom_boxplot(width=0.1,fill="white") + labs(title = "EK Marker Gene Module Score", x="Cluster") + ylim(min(tooth[[modulename]])-0.01, max(tooth[[modulename]])+0.01)

pdf(file=paste(NODENAME2, 'EKGenesVenn_Stats.pdf', sep=""), height=15, width=10)
print(g2 + geom_signif(comparisons = list(c("Mesenchyme", "Enamel Knot"), c("Enamel Knot", "Endothelium"), c("Enamel Knot", "Other Blood Cells"), c("Enamel Knot", "Red Blood Cells"), c("Enamel Knot", "Perivascular Cells"), c("Enamel Knot", "Epithelium"), c('Enamel Knot', 'Bone Progenitor Cells')), map_signif_level = TRUE, textsize=6, aes(y_position=c(max(tooth[[modulename]])+0.005))) + theme(aspect.ratio = 1, legend.position = "none") + ggtitle(NODENAME2))
print(plott)
print(p3)
plot(t, xlim=c(1,abline)) 
abline(v=length(intersect(mesmarkers, NODENAME)))
labs(main=paste("Number of EK Marker Genes From Random Sampling of", len, "Random Genes", sep=" "), xlab="Number of Overlapping Genes with EK", ylab="Frequency")
print(p4)
plot(t2, xlim=c(1,topabline)) 
abline(v=length(intersect(topmesmarkers, NODENAME)))
labs(main=paste("Number of Top EK Marker Genes From Random Sampling of", len, "Random Genes", sep=" "), xlab="Number of Overlapping Genes with EK", ylab="Frequency")
dev.off()
}
